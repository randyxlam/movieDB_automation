# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageAccess unless the
# corresponding RuntimePermission ("accessClassInPackage."+package) has
# been granted.
package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.
#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageDefinition unless the
# corresponding RuntimePermission ("defineClassInPackage."+package) has
# been granted.
#
# by default, no packages are restricted for definition, and none of
# the class loaders supplied with the JDK call checkPackageDefinition.
#
package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper.

#
#
# List of comma-separated paths defining the contents of the "common" 
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank,the JVM system loader will be used as Catalina's "common" 
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class 
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar

#
# List of comma-separated paths defining the contents of the "server" 
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank, the "common" loader will be used as Catalina's "server" 
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class 
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
server.loader=

#
# List of comma-separated paths defining the contents of the "shared" 
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
# the "common" loader will be used as Catalina's "shared" loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class 
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository 
# Please note that for single jars, e.g. bar.jar, you need the URL form
# starting with file:.
shared.loader=

#
# String cache configuration.
tomcat.util.buf.StringCache.byte.enabled=true
#tomcat.util.buf.StringCache.char.enabled=true
#tomcat.util.buf.StringCache.trainThreshold=500000
#tomcat.util.buf.StringCache.cacheSize=5000


#If this property is set to true, the startup phase will
#abort if there is an error during initialization
org.apache.catalina.startup.EXIT_ON_INIT_FAILURE=true

org.apache.tomcat.util.digester.PROPERTY_SOURCE=com.springsource.tcserver.security.PropertyDecoder
com.springsource.tcserver.security.PropertyDecoder.passphrase=springsource
# List of JAR files that should not be scanned for configuration information
# such as web fragments, TLD files etc. It must be a comma separated list of
# JAR file names.
# The JARs listed below include:
# - Tomcat Bootstrap JARs
# - Tomcat API JARs
# - Catalina JARs
# - Jasper JARs
# - Tomcat JARs
# - Common non-Tomcat JARs
# - Sun JDK JARs
# - Apple JDK JARs
tomcat.util.scan.DefaultJarScanner.jarsToSkip=\
annotations-api.jar,\
ant.jar,\
apple_provider.jar,\
AppleScriptEngine.jar,\
antlr-*.jar,\
aopalliance-*.jar,\
asm-*.jar,\
aspectj*.jar,\
bootstrap.jar,\
catalina.jar,\
catalina-ant.jar,\
catalina-ha.jar,\
catalina-tribes.jar,\
cglib-*.jar,\
com.springsource.org.apache.tomcat.jdbc.jar,\
commons-beanutils*.jar,\
commons-codec*.jar,\
commons-collections*.jar,\
commons-daemon.jar,\
commons-dbcp*.jar,\
commons-digester*.jar,\
commons-fileupload*.jar,\
commons-httpclient*.jar,\
commons-io*.jar,\
commons-lang*.jar,\
commons-logging*.jar,\
commons-math*.jar,\
commons-pool*.jar,\
CoreAudio.jar,\
dom4j-*.jar,\
dns_sd.jar,\
dnsns.jar,\
ecj-*.jar,\
ehcache-core-*.jar,\
el-api.jar,\
freemarker-*.jar,\
geronimo-spec-jaxrpc*.jar,\
groovy-all-*.jar,\
h2*.jar,\
hibernate*.jar,\
httpclient*.jar,\
insight-*.jar,\
j3daudio.jar,\
j3dcore.jar,\
j3dutils.jar,\
jackson-*.jar,\
javassist-*.jar,\
jai_codec.jar,\
jai_core.jar,\
jasper.jar,\
jasper-el.jar,\
jcommon-*.jar,\
jetty-util-*.jar,\
jfreechart-*.jar,\
jline-*.jar,\
jmx.jar,\
jmx-tools.jar,\
jsp-api.jar,\
jstl.jar,\
jta*.jar,\
ldapsec.jar,\
liquibase-core-*.jar,\
localedata.jar,\
log4j*.jar,\
mail*.jar,\
mlibwrapper_jai.jar,\
MRJToolkit.jar,\
servlet-api.jar,\
slf4j*.jar,\
spring-aop-*.jar,\
spring-asm-*.jar,\
spring-aspects-*.jar,\
spring-beans-*.jar,\
spring-context-*.jar,\
spring-context-support-*.jar,\
spring-core-*.jar,\
spring-expression-*.jar,\
spring-instrument-tomcat-*.jar,\
spring-jdbc-*.jar,\
spring-js-*.jar,\
spring-orm-*.jar,\
spring-security-core-*.jar,\
spring-security-web-*.jar,\
spring-tx-*.jar,\
stax-*.jar,\
sunjce_provider.jar,\
sunpkcs11.jar,\
tcServer.jar,\
threaddumpwrapper.jar,\
tiles-api-*.jar,\
tiles-core-*.jar,\
tiles-servlet-*.jar,\
tomcat-api.jar,\
tomcat-coyote.jar,\
tomcat-dbcp.jar,\
tomcat-i18n-en.jar,\
tomcat-i18n-es.jar,\
tomcat-i18n-fr.jar,\
tomcat-i18n-ja.jar,\
tomcat-jdbc.jar,\
tomcat-juli.jar,\
tomcat-util.jar,\
tools.jar,\
vecmath.jar,\
wrapper.jar,\
wsdl4j*.jar,\
xercesImpl.jar,\
xml-apis.jar,\
xmlParserAPIs.jar,\
xpp3_min-*.jar,\
xstream-*.jar

# Without this setting, our Java servers cannot connect to Tableau (Big Insights). 
jsse.enableSNIExtension=${jsse.enableSNIExtension}

##PROPERTIES
base.shutdown.port=${base.shutdown.port}
base.jmx.port=${base.jmx.port}
bio.tomcat.port=${bio.tomcat.port}
http.replication.port=${http.replication.port}
spring.profiles.active=${spring.profiles.active}
tomcat.jvmRoute=${tomcat.jvmRoute}
tomcat.http.connectionTimeout=${tomcat.http.connectionTimeout}
tomcat.http.maxThreads=${tomcat.http.maxThreads}
tomcat.http.minSpareThreads=${tomcat.http.minSpareThreads}
tomcat.http.maxSpareThreads=${tomcat.http.maxSpareThreads}
tomcat.cluster.ip=228.0.1.${tomcat.cluster.ip}
rmi.bind.address=${rmi.bind.address}
connectToMbeanServer=${connectToMbeanServer}

# Environment type
environment.type=${environment.type}

# Auth Properties
mshare.auth.token.salt=${mshare.auth.token.salt}
mshare.auth.token.cookieName=${mshare.auth.token.cookieName}
mshare.auth.token.longAuthenticationPeriodInSeconds=${mshare.auth.token.longAuthenticationPeriodInSeconds}
mshare.auth.token.shortAuthenticationPeriodInSeconds=${mshare.auth.token.shortAuthenticationPeriodInSeconds}

#Ehcache Properties
ehcache.mcast.addr=${ehcache.mcast.addr}
ehcache.mcast.port=${ehcache.mcast.port}
ehcache.queue.mcast.port=${ehcache.queue.mcast.port}
ehcache.report.mcast.addr=${ehcache.report.mcast.addr}
ehcache.report.mcast.port=${ehcache.report.mcast.port}
ehcache.timeToLive.seconds=${ehcache.timeToLive.seconds}

# Instance Roles
mshare.job.admin=${mshare.job.admin}
mshare.job.email.reminder.enabled=${mshare.job.email.reminder.enabled}
mshare.job.email.queue.enabled=${mshare.job.email.queue.enabled}
mshare.job.email.queue.allowManualStart=${mshare.job.email.queue.allowManualStart}
mshare.job.ftp.queue.enabled=${mshare.job.ftp.queue.enabled}
mshare.job.ftp.queue.allowManualStart=${mshare.job.ftp.queue.allowManualStart}
mshare.job.metadata.consumers.enabled=${mshare.job.metadata.consumers.enabled}
mshare.job.socialReviews.consumers.enabled=${mshare.job.socialReviews.consumers.enabled}
mshare.job.pushapi=${mshare.job.pushapi}
mshare.job.pushapi.consumers.enabled=${mshare.job.pushapi.consumers.enabled}
mshare.job.pushapi.testEnvironmentKey=${mshare.job.pushapi.testEnvironmentKey}
mshare.job.platform=${mshare.job.platform}
mshare.job.report.producer.enabled=${mshare.job.report.producer.enabled}
mshare.job.report.producer.allowManualStart=${mshare.job.report.producer.allowManualStart}
mshare.job.queue.broker.enabled=${mshare.job.queue.broker.enabled}
mshare.job.report.consumers.enabled=${mshare.job.report.consumers.enabled}
mshare.job.report.comment.reprocess.count=${mshare.job.report.comment.reprocess.count}
mshare.job.report.comment.reprocess.enabled=${mshare.job.report.comment.reprocess.enabled}
mshare.job.recommendations.enabled=${mshare.job.recommendations.enabled}
mshare.outboundq.enabled=${mshare.outboundq.enabled}

#Mindshare Properties
mshare.app.alertToAddress=${mshare.app.alertToAddress}
mshare.app.apiURL=${mshare.app.apiURL}
mshare.app.auditing.enabled=${mshare.app.auditing.enabled}
mshare.app.errorToAddress=${mshare.app.errorToAddress}
mshare.app.hostURL=${mshare.app.hostURL}
mshare.app.hostURLSuffix=${mshare.app.hostURLSuffix}
mshare.app.isProd=${mshare.app.isProd}
mshare.app.useMinifiedSrc=${mshare.app.useMinifiedSrc}
mshare.app.isSimulatePlum=${mshare.app.isSimulatePlum}
mshare.app.isTestMode=${mshare.app.isTestMode}
mshare.app.lexalyticsService=${mshare.app.lexalyticsService}
mshare.app.mindshareReviewLink=${mshare.app.mindshareReviewLink}
mshare.app.mindshareReviewWidgetURL=${mshare.app.mindshareReviewWidgetURL}
mshare.app.reportHostURL=${mshare.app.reportHostURL}
mshare.app.vociService=${mshare.app.vociService}
mshare.app.voci.restServiceUrl=${mshare.app.voci.restServiceUrl}
mshare.app.voci.allRestServiceUrls=${mshare.app.voci.allRestServiceUrls}
mshare.app.voci.useRestService=${mshare.app.voci.useRestService}
mshare.app.voiceHostURL=${mshare.app.voiceHostURL}
mshare.comment.analysis.maxWaitSeconds=${mshare.comment.analysis.maxWaitSeconds}
mshare.dashboard.context.date=${mshare.dashboard.context.date}
mshare.dashboard.cachingenabled=${mshare.dashboard.cachingenabled}
mshare.db.archivedb=${mshare.db.archivedb}
mshare.text.analyzer.host.al.dedicatedPear=${mshare.text.analyzer.host.al.dedicatedPear}
# Last updated ${mshare.db.archivedb.password.date}
mshare.db.archivedb.password=${mshare.db.archivedb.password}
mshare.db.archivedb.user=${mshare.db.archivedb.user}
mshare.db.logging=${mshare.db.logging}
mshare.db.logging.instance=${mshare.db.logging.instance}
# Last updated ${mshare.db.logging.password.date}
mshare.db.logging.password=${mshare.db.logging.password}
mshare.db.logging.user=${mshare.db.logging.user}

mshare.db.nz.primary=${mshare.db.nz.primary}
mshare.db.nz.secondary=${mshare.db.nz.secondary}
mshare.db.nzasync.initialSize=${mshare.db.nzasync.initialSize}
mshare.db.nzasync.maxActive=${mshare.db.nzasync.maxActive}
mshare.db.nzasync.maxIdle=${mshare.db.nzasync.maxIdle}
# Last updated ${mshare.db.nzasync.password.date}
mshare.db.nzasync.password=${mshare.db.nzasync.password}
mshare.db.nzasync.user=${mshare.db.nzasync.user}
mshare.db.nzmanual.initialSize=${mshare.db.nzmanual.initialSize}
mshare.db.nzmanual.maxActive=${mshare.db.nzmanual.maxActive}
mshare.db.nzmanual.maxIdle=${mshare.db.nzmanual.maxIdle}
# Last updated ${mshare.db.nzmanual.password.date}
mshare.db.nzmanual.password=${mshare.db.nzmanual.password}
mshare.db.nzmanual.user=${mshare.db.nzmanual.user}

mshare.db.nzwarehouse.url=${mshare.db.nzwarehouse.url}
mshare.db.nzwarehouse.initialSize=${mshare.db.nzwarehouse.initialSize}
mshare.db.nzwarehouse.maxActive=${mshare.db.nzwarehouse.maxActive}
mshare.db.nzwarehouse.maxIdle=${mshare.db.nzwarehouse.maxIdle}
mshare.db.nzwarehouse.user=${mshare.db.nzwarehouse.user}
# Last updated ${mshare.db.nzwarehouse.password.date}
mshare.db.nzwarehouse.password=${mshare.db.nzwarehouse.password}

mshare.db.oltp=${mshare.db.oltp}
# Last updated ${mshare.db.oltp.password.date}
mshare.db.oltp.password=${mshare.db.oltp.password}
mshare.db.oltp.user=${mshare.db.oltp.user}
mshare.db.oltp.alt.user=${mshare.db.oltp.alt.user}
mshare.db.oltp.alt.password=${mshare.db.oltp.alt.password}

# Last updated ${mshare.db.queue.password.date}
mshare.db.queue.password=${mshare.db.queue.password}
mshare.db.queue.user=${mshare.db.queue.user}
mshare.db.queue.pool.initialSize=${mshare.db.queue.pool.initialSize}
mshare.db.queue.pool.maxActive=${mshare.db.queue.pool.initialSize}
mshare.db.queue.pool.maxIdle=${mshare.db.queue.pool.initialSize}
mshare.db.queue=${mshare.db.queue}

mshare.db.surveyTaskdb=${mshare.db.surveyTaskdb}
mshare.db.surveyTaskdb.user=${mshare.db.surveyTaskdb.user}
# Last updated ${mshare.db.surveyTaskdb.password.date}
mshare.db.surveyTaskdb.password=${mshare.db.surveyTaskdb.password}

mshare.db.sql.warehouse=${mshare.db.sql.warehouse}
# Last updated ${mshare.db.sql.warehouse.password.date}
mshare.db.sql.warehouse.password=${mshare.db.sql.warehouse.password}
mshare.db.sql.warehouse.user=${mshare.db.sql.warehouse.user}

mshare.db.warehouse=${mshare.db.warehouse}
# Last updated ${mshare.db.warehouse.password.date}
mshare.db.warehouse.password=${mshare.db.warehouse.password}
mshare.db.warehouse.user=${mshare.db.warehouse.user}

mshare.db.vertica.warehouse=${mshare.db.vertica.warehouse}
mshare.db.vertica.warehouse.backupServerNodes=${mshare.db.vertica.warehouse.backupServerNodes}
mshare.db.vertica.warehouse.password=${mshare.db.vertica.warehouse.password}
mshare.db.vertica.warehouse.user=${mshare.db.vertica.warehouse.user}
mshare.db.vertica.warehouse.initialSize=${mshare.db.vertica.warehouse.initialSize}

mshare.ehcache.jgroups.disabled=${mshare.ehcache.jgroups.disabled}
mshare.email.bccAddress=${mshare.email.bccAddress}
mshare.email.overrideToAddress=${mshare.email.overrideToAddress}
mshare.email.sendDialectConfigEmail=${mshare.email.sendDialectConfigEmail}
mshare.email.smtp.host=${mshare.email.smtp.host}
# Last updated ${mshare.email.smtp.password.date}
mshare.email.smtp.password=${mshare.email.smtp.password}
mshare.email.smtp.username=${mshare.email.smtp.username}
mshare.email.smtp.internal.host=${mshare.email.smtp.internal.host}
# Last updated ${mshare.email.smtp.internal.password.date}
mshare.email.smtp.internal.password=${mshare.email.smtp.internal.password}
mshare.email.smtp.internal.username=${mshare.email.smtp.internal.username}
mshare.ftp.overrideProfile=${mshare.ftp.overrideProfile}
mshare.ftp.uncompressedAudio.ftpProfile=${mshare.ftp.uncompressedAudio.ftpProfile}
mshare.goRecommend.facebook.appid=${mshare.goRecommend.facebook.appid}
mshare.goRecommend.facebook.appsecret=${mshare.goRecommend.facebook.appsecret}
mshare.goRecommend.googleplus.clientid=${mshare.goRecommend.googleplus.clientid}
mshare.goRecommend.googleplus.clientsecret=${mshare.goRecommend.googleplus.clientsecret}
mshare.goRecommend.twitter.consumerkey=${mshare.goRecommend.twitter.consumerkey}
mshare.goRecommend.twitter.consumersecret=${mshare.goRecommend.twitter.consumersecret}
mshare.groovy.classStorage.enabled=${mshare.groovy.classStorage.enabled}
mshare.hibernate.format_sql=${mshare.hibernate.format_sql}
mshare.hibernate.show_sql=${mshare.hibernate.show_sql}
mshare.job.email.reminder.repeatIntervalMs=${mshare.job.email.reminder.repeatIntervalMs}
mshare.job.monitor.plum.enabled=${mshare.job.monitor.plum.enabled}
mshare.metadata.jmsConsumerCount=${mshare.metadata.jmsConsumerCount}
mshare.metadata.maxConsumers=${mshare.metadata.maxConsumers}
mshare.pushapi.jmsConsumerCount=${mshare.pushapi.jmsConsumerCount}
mshare.pushapi.maxConsumers=${mshare.pushapi.maxConsumers}
mshare.service.batch_analyzer_chunk_size=${mshare.service.batch_analyzer_chunk_size}
mshare.service.batch_analyzer_thread_multiplier=${mshare.service.batch_analyzer_thread_multiplier}

mshare.socialReviews.jmsConsumerCount=${mshare.socialReviews.jmsConsumerCount}
mshare.socialReviews.maxConsumers=${mshare.socialReviews.maxConsumers}

# Feature controls
# Note: Instead of setting this to true, remove this entry. The code defaults to true if no value is defined.
mshare.feature.contacts.enabled=${mshare.feature.contacts.enabled}

# Social Jobs
mshare.socialapi.enabled=${mshare.socialapi.enabled}
mshare.job.social.loadSocialLocations=${mshare.job.social.loadSocialLocations}
mshare.job.social.loadSocialLocations.repeatIntervalMs=${mshare.job.social.loadSocialLocations.repeatIntervalMs}
mshare.job.social.populateDemoLocation=${mshare.job.social.populateDemoLocation}
mshare.job.social.populateDemoLocation.id=${mshare.job.social.populateDemoLocation.id}
mshare.job.social.scrapingHub.enabled=${mshare.job.social.scrapingHub.enabled}
mshare.job.social.scrapingHub.push.repeatIntervalMs=${mshare.job.social.scrapingHub.push.repeatIntervalMs}
mshare.job.social.scrapingHub.pull.repeatIntervalMs=${mshare.job.social.scrapingHub.pull.repeatIntervalMs}
mshare.job.social.scrapingHub.envId=${deploy.environment}

mshare.monitor.plum.hosts=${mshare.monitor.plum.hosts}
mshare.monitor.plumqueue.outboundPortCount=${mshare.monitor.plumqueue.outboundPortCount}
mshare.mongo.db=${mshare.mongo.db}
mshare.mongo.user=${mshare.mongo.user}
# Last updated ${mshare.mongo.password.date}
mshare.mongo.password=${mshare.mongo.password}
mshare.mongo.rs=${mshare.mongo.rs}
mshare.mongo.ods.db=${mshare.mongo.ods.db}
mshare.mongo.ods.rs=${mshare.mongo.ods.rs}
mshare.mongo.ods.user=${mshare.mongo.ods.user}
mshare.mongo.ods.password=${mshare.mongo.ods.password}
mshare.mongo.reportcache.db=${mshare.mongo.reportcache.db}
mshare.mongo.reportcache.user=${mshare.mongo.reportcache.user}
# Last updated ${mshare.mongo.reportcache.password.date}
mshare.mongo.reportcache.password=${mshare.mongo.reportcache.password}
mshare.mongo.reportcache.rs=${mshare.mongo.reportcache.rs}

mshare.mongo.log.db=${mshare.mongo.log.db}
mshare.mongo.log.rs=${mshare.mongo.log.rs}
mshare.mongo.log.user=${mshare.mongo.log.user}
mshare.mongo.log.password=${mshare.mongo.log.password}

mshare.queue.broker.config=${mshare.queue.broker.config}
mshare.queue.broker.connection=${mshare.queue.broker.connection}
mshare.queue.broker.name=${mshare.queue.broker.name}
mshare.queue.broker.tablePrefix=${mshare.queue.broker.tablePrefix}
mshare.queue.connection=${mshare.queue.connection}

mshare.report.generator.maxConsumers=${mshare.report.generator.maxConsumers}
mshare.report.generator.maxCellCount=${mshare.report.generator.maxCellCount}
mshare.report.generator.startHour=${mshare.report.generator.startHour}
mshare.report.jms.mssqlConsumerCount.manual=${mshare.report.jms.mssqlConsumerCount.manual}
mshare.report.jms.mssqlConsumerCount.scheduled=${mshare.report.jms.mssqlConsumerCount.scheduled}
mshare.report.jms.netezzaConsumerCount.manual=${mshare.report.jms.netezzaConsumerCount.manual}
mshare.report.jms.netezzaConsumerCount.scheduled=${mshare.report.jms.netezzaConsumerCount.scheduled}
mshare.report.jms.verticaConsumerCount.manual=${mshare.report.jms.verticaConsumerCount.manual}
mshare.report.jms.verticaConsumerCount.scheduled=${mshare.report.jms.verticaConsumerCount.scheduled}
mshare.report.manual.maxCellCount=${mshare.report.manual.maxCellCount}
mshare.report.pdf.maxCellCount=${mshare.report.pdf.maxCellCount}
mshare.feature.zeroResponseReporting.enabled=${mshare.feature.zeroResponseReporting.enabled}
mshare.saml.bypass.enabled=${mshare.saml.bypass.enabled}
mshare.saml.sp.entityID=${mshare.saml.sp.entityID}
mshare.saml.sp.entityID.orig=${mshare.saml.sp.entityID.orig}
mshare.saml.sp.key=${mshare.saml.sp.key}
mshare.saml.sp.key.alt=${mshare.saml.sp.key.alt}
mshare.shorturl.prefix=${mshare.shorturl.prefix}
mshare.shorturl.expire.url=${mshare.shorturl.redis.expire.url}
mshare.survey.redemptionCode.count=${mshare.survey.redemptionCode.count}
mshare.tableau.admin.username=${mshare.tableau.admin.username}
mshare.tableau.admin.password=${mshare.tableau.admin.password}
mshare.text.analyzer.host=${mshare.text.analyzer.host}
mshare.text.analyzer.host.al=${mshare.text.analyzer.host.al}
mshare.text.analyzer.sftp=${mshare.text.analyzer.sftp}
mshare.text.search.host=${mshare.text.search.host}
mshare.websurvey.exceptionToggleDetails=${mshare.websurvey.exceptionToggleDetails}

gatewaysWithIssues=${gatewaysWithIssues}

inmoment.clienttracking.ga.id=${inmoment.clienttracking.ga.id}
inmoment.clienttracking.mixpanel.id=${inmoment.clienttracking.mixpanel.id}
inmoment.dnis.cloud.bucketName=${inmoment.dnis.cloud.bucketName}

empathica.webService.instantWinWSURL=${empathica.webService.instantWinWSURL}
empathica.webService.getAllIncentivesWSURL=${empathica.webService.getAllIncentivesWSURL}

mshare.comment.analysis.supportedLanguages=${mshare.comment.analysis.supportedLanguages}
mshare.comment.analysis.errorCountLimit=20

mshare.contact.datacenter.US.url=${mshare.contact.datacenter.US.url}
mshare.contact.datacenter.US.user=${mshare.contact.datacenter.US.user}
mshare.contact.datacenter.US.password=${mshare.contact.datacenter.US.password}
mshare.contact.datacenter.DE.url=${mshare.contact.datacenter.DE.url}
mshare.contact.datacenter.DE.user=${mshare.contact.datacenter.DE.user}
mshare.contact.datacenter.DE.password=${mshare.contact.datacenter.DE.password}

#################################
# Third party behaviour controls
#################################
tapestry.omit-generator-meta=true

# 'search' is the app context when the search web app is deployed in Tomcat
# (a sample proxy URL would be: http://127.0.0.1:8080/platform/v1/proxy/search/responses/687?offset=0&limit=32&expression=service)
mshare.proxy.service.search.urlKey=${mshare.proxy.service.search.urlKey}
mshare.proxy.service.search.protocol=${mshare.proxy.service.search.protocol}
mshare.proxy.service.search.host=${mshare.proxy.service.search.host}
mshare.proxy.service.search.port=${mshare.proxy.service.search.port}
# 'responses' is the app context when the search web app is run with an embedded Tomcat
# (a sample proxy URL would be: http://127.0.0.1:8080/platform/v1/proxy/responses/687?offset=0&limit=32&expression=service)
mshare.proxy.service.embeddedSearch.urlKey=${mshare.proxy.service.embeddedSearch.urlKey}
mshare.proxy.service.embeddedSearch.protocol=${mshare.proxy.service.embeddedSearch.protocol}
mshare.proxy.service.embeddedSearch.host=${mshare.proxy.service.embeddedSearch.host}
mshare.proxy.service.embeddedSearch.port=${mshare.proxy.service.embeddedSearch.port}

mshare.report.pageGenerator.enableReportHeartbeat=${mshare.report.pageGenerator.enableReportHeartbeat}
com.inmoment.reportengine.mssqlAnswerPivotFilterByDataField=${com.inmoment.reportengine.mssqlAnswerPivotFilterByDataField}

mshare.api.limitResponseIdRetrieval=${mshare.api.limitResponseIdRetrieval}
